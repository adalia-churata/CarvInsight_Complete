/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sac.CarvInsight.view;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import sac.CarvInsight.model.DAO.Asig_MaquinariaDAO;
import sac.CarvInsight.model.DAO.Asig_MaquinariaDAOImpl;
import sac.CarvInsight.model.DAO.Reg_UsoMaqDAO;
import sac.CarvInsight.model.DAO.Reg_UsoMaqDAOImpl;
import sac.CarvInsight.model.Reg_UsoMaq;
import sac.CarvInsight.util.ConexionArduino;

/**
 *
 * @author adali
 */
public class FrameArduino extends javax.swing.JFrame {
    
    private static final ConexionArduino conexion = new ConexionArduino();
    public static boolean statusHilo=false;
    private boolean transferenciaRealizada;
    public FrameArduino() {
        initComponents();
        dato();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void llenarCombo() {
        String[] puertos = conexion.obtenerLista().split(",");
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < puertos.length; i++) {
            model.addElement(puertos[i]);
        }
        cmbPuer.setModel(model);
    }
    
    
    
    public static ConexionArduino getConexion() {
        return conexion;
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        btnConectar = new javax.swing.JButton();
        lblEst = new javax.swing.JLabel();
        cmbPuer = new javax.swing.JComboBox<>();
        txtRead = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSeleccionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        desktopPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });
        desktopPane.add(btnConectar, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 106, -1, -1));

        lblEst.setText("jLabel1");
        desktopPane.add(lblEst, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 111, 104, -1));

        cmbPuer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        desktopPane.add(cmbPuer, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 106, 122, -1));
        desktopPane.add(txtRead, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 140, -1));
        desktopPane.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 167, 75, -1));
        desktopPane.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 230, 75, -1));

        jLabel1.setText("Id_Asignment");
        desktopPane.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 172, 75, -1));

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });
        desktopPane.add(btnSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 167, -1, -1));

        getContentPane().add(desktopPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        if (btnConectar.getText().equals("Conectar")) {
            conexion.conectar(cmbPuer.getSelectedItem().toString().trim());
            conexion.iniciarIo();
            conexion.initListener();
            if (conexion.isConectado()) {
                lblEst.setText("Conectado");
                btnConectar.setText("Desconectar");
            } else {
                lblEst.setText("Desconectado");
            }
        } else {
            btnConectar.setText("Conectar");
            lblEst.setText("Desconectado");
            conexion.desconectar();
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        // TODO add your handling code here:
        Assignment ventana = new Assignment();
        
        // Obtener el tamaño de la pantalla
         desktopPane.add(ventana);
        
        int x = (desktopPane.getWidth()/2) - ventana.getWidth()/2;
        int y = (desktopPane.getHeight()/2) - ventana.getHeight()/2;
        ventana.setLocation(x, y);
        ventana.show();
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public String getDate(){
        Date fechaActual = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("yy/MM/dd");
        String nueva_fecha = formatoFecha.format(fechaActual);
        return nueva_fecha;
    }
    
    public void dato(){
        
    transferenciaRealizada=false;
    txtRead.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
               transferirSiNoVacio();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                transferirSiNoVacio();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                // No se utiliza para JTextField
            }
        });
     }
    
    private void transferirSiNoVacio() {
        // Obtener el texto del textField1
        String texto = txtRead.getText().trim();

        // Transferir datos solo si el textField1 no está vacíoS
        if (!texto.isEmpty() && !transferenciaRealizada) {
            // Establecer el texto en textField2
                    String[] values = texto.split(",");
                    int availability = Integer.parseInt(values[0]);
                    int performance = Integer.parseInt(values[1]);
                    int quality = Integer.parseInt(values[2]);
                    
                    Asig_MaquinariaDAO as = new Asig_MaquinariaDAOImpl();
                    Reg_UsoMaq reg = new Reg_UsoMaq();
                    Reg_UsoMaqDAO r = new Reg_UsoMaqDAOImpl();

                    reg.setId_asig(Integer.parseInt(txtId.getText()));
                    reg.setTimeWork(availability);
                    reg.setQuantity(performance);
                    reg.setError(quality);
                    reg.setDate(getDate());

                    r.insert(reg);
                    as.updateState(Integer.parseInt(txtId.getText()));

            // Marcar que la transferencia se ha realizado
            transferenciaRealizada = true;
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameArduino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameArduino().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JComboBox<String> cmbPuer;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lblEst;
    public static javax.swing.JTextField txtId;
    public static javax.swing.JTextField txtRead;
    // End of variables declaration//GEN-END:variables
}
